plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'de.fuerstenau.buildconfig' version '1.1.8'
    id 'java-library'
}

group 'csc.distributed'
version '1.0'

repositories {
    mavenCentral()
}

configurations {
    extraLibs
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile 'org.apache.kafka:kafka-clients:2.0.0'
    compile 'org.apache.kafka:kafka-streams:2.0.0'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
    compile 'com.google.code.gson:gson:2.8.6'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

buildConfig {
    buildConfigField('String', 'bootstraps', System.getenv("WEBSCRAPER_BOOTSTRAPS") ?: "127.0.0.1:9092")
    buildConfigField('String', 'SERVICES_TOPIC', System.getenv("WEBSCRAPER_SERVICES_TOPIC") ?: "services")
}

java {
    withJavadocJar()
}

task sourcesJar(type: Jar) {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
        )
    }
    from sourceSets.main.allSource
    from sourceSets.main.output
    destinationDirectory = buildDir
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}



